<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inswave.wrm.common.dao.MessageDao">
	
	<select id="selectMessageList" resultType="Map" parameterType="Map">
        WITH RECURSIVE DUMMY_ROWS(IDX) AS (
            SELECT
                1               
            UNION ALL
            SELECT
                IDX + 1  
            FROM
                DUMMY_ROWS
            WHERE
                DUMMY_ROWS.IDX &lt; 30
        )	
		SELECT 
			@ROWNUM := @ROWNUM + 1 AS RNUM, 
		    CASE WHEN @ROWNUM % 2 = 0 THEN '../../cm/images/testimage/test_1.jpg' 
		         ELSE '../../cm/images/testimage/test_2.png'
		    END AS IMAGE_AZ,
			CASE WHEN @ROWNUM % 2 = 0 THEN 'ko' ELSE 'en' END AS LANG_AZ, 
			CASE WHEN @ROWNUM % 2 = 0 THEN 'en' ELSE 'ko' END AS LANG_BZ,
			CASE WHEN @ROWNUM % 2 = 0 THEN 'ko' ELSE 'en' END AS LANG_CZ,
			CASE WHEN @ROWNUM % 2 = 0 THEN 'en' ELSE 'ko' END AS LANG_DZ,
			CASE WHEN @ROWNUM % 2 = 0 THEN 'ko' ELSE 'en' END AS LANG_EZ,
			concat(@ROWNUM, '_1_', MSG_KEY) AS MSG_KEY_AZ, 
			concat(@ROWNUM, '_2_', MSG_KEY)  AS MSG_KEY_BZ,
			concat(@ROWNUM, '_3_', MSG_KEY)  AS MSG_KEY_CZ,
			concat(@ROWNUM, '_4_', MSG_KEY)  AS MSG_KEY_DZ,
			concat(@ROWNUM, '_5_', MSG_KEY)  AS MSG_KEY_EZ,
			
			concat(@ROWNUM, '_1_', MSG_CONTENTS) AS MSG_CONTENTS_AZ, 
			concat(@ROWNUM, '_2_', MSG_CONTENTS) AS MSG_CONTENTS_BZ,
			concat(@ROWNUM, '_3_', MSG_CONTENTS) AS MSG_CONTENTS_CZ,
			concat(@ROWNUM, '_4_', MSG_CONTENTS) AS MSG_CONTENTS_DZ,
			concat(@ROWNUM, '_5_', MSG_CONTENTS) AS MSG_CONTENTS_EZ,
			
			'Y' AS IS_USE_AZ,
			'N' AS IS_USE_BZ,
			'Y' AS IS_USE_CZ,
			'N' AS IS_USE_DZ,
			'Y' AS IS_USE_EZ
		  FROM BM_LANG_MSG, (SELECT @ROWNUM := 0) TMP
		  CROSS JOIN DUMMY_ROWS
		  LIMIT ${LIST_COUNT} 
	</select>	
	
<!-- 	<select id="selectMessageList" resultType="Map" parameterType="Map">
		SELECT LANG, MSG_KEY, MSG_CONTENTS, IS_USE
		  FROM BM_LANG_MSG
		<where>
			<if test="LANG != null and LANG != '' and LANG != 'all'">
				AND LANG LIKE #{LANG}
			</if>
			<if test="MSG_KEY != null and MSG_KEY != ''">
				AND MSG_KEY LIKE CONCAT('%', #{MSG_KEY}, '%')
			</if>
			<if test="MSG_CONTENTS != null and MSG_CONTENTS != ''">
				AND MSG_CONTENTS LIKE CONCAT('%', #{MSG_CONTENTS}, '%')
			</if>
			<if test="IS_USE != null and IS_USE != '' and IS_USE != 'all'">
				AND IS_USE = #{IS_USE}
			</if>
		</where>
	</select> -->
	
	<insert id="insertMessage" parameterType="Map">
		INSERT INTO BM_LANG_MSG (LANG, MSG_KEY, MSG_CONTENTS, IS_USE)
		VALUES (#{LANG}, #{MSG_KEY}, #{MSG_CONTENTS}, #{IS_USE})
	</insert>
	
	<update id="updateMessage" parameterType="Map">
		UPDATE BM_LANG_MSG
		   SET MSG_CONTENTS = #{MSG_CONTENTS}, IS_USE = #{IS_USE}
		 WHERE MSG_KEY = #{MSG_KEY}
		   AND LANG = #{LANG}
	</update>
	
	<delete id="deleteMessage" parameterType="Map">
		DELETE FROM BM_LANG_MSG 
		 WHERE MSG_KEY = #{MSG_KEY} AND LANG = #{LANG}
	</delete>
	
	<select id="selectAllMessage" resultType="Map" parameterType="Map">
		SELECT MSG_KEY, MSG_CONTENTS
		  FROM BM_LANG_MSG
		 WHERE IS_USE = 'Y'
		<if test="LANG != null and LANG != ''">
			AND LANG = #{LANG}
		</if>
	</select>
	
</mapper>