<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="30 seconds">

    <!--
    # pattern 관련 옵션
    1. %Logger{length}
    - Logger name을 축약할 수 있다. {length}는 최대 자리 수
    2. %thread
    - 현재 Thread 이름
    3. %-5level
    - 로그 레벨, -5는 출력의 고정폭 값
    4. %msg
    - 로그 메시지 (=%message)
    5. %n
    - new line
    6. ${PID:-}
    - 프로세스 아이디
    기타
    %d : 로그 기록시간
    %p : 로깅 레벨
    %F : 로깅이 발생한 프로그램 파일명
    %M : 로깅일 발생한 메소드의 이름
    %l : 로깅이 발생한 호출지의 정보
    %L : 로깅이 발생한 호출지의 라인 수
    %t : 쓰레드 명
    %c : 로깅이 발생한 카테고리
    %C : 로깅이 발생한 클래스 명
    %m : 로그 메시지
    %r : 애플리케이션 시작 이후부터 로깅이 발생한 시점까지의 시간
     -->

    <contextName>base</contextName>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%thread] [%logger{100}:%M] - %msg %n</pattern> -->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%logger{100}::%M] - %msg%n</pattern>
        </encoder>
    </appender>


    <logger name="jdbc.audit" level="OFF" additivity="true"/>
    <logger name="jdbc.sqltiming" level="OFF" additivity="true"/>
    <logger name="jdbc.resultset" level="OFF" additivity="true"/>
    <logger name="jdbc.connection" level="OFF" additivity="true"/>
    <logger name="jdbc.sqlonly" level="INFO" additivity="true"/>
    <logger name="jdbc.resultsettable" level="OFF" additivity="true"/>


    <logger name="org" level="DEBUG" additivity="true"/>
<!--     <logger name="org.mybatis" level="ERROR" additivity="true"/>
    <logger name="org.apache" level="ERROR" additivity="true"/>
    <logger name="org.hibernate" level="ERROR" additivity="true"/> -->



    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
    </root>

</configuration>
